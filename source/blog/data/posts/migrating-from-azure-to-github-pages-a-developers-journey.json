{
  "id": "migrating-from-azure-to-github-pages-a-developers-journey",
  "title": "Migrating from Azure to GitHub Pages: A Developer's Journey",
  "slug": "migrating-from-azure-to-github-pages-a-developers-journey",
  "publishDate": "2025-01-15",
  "lastModified": "2025-08-15",
  "author": "Franco",
  "summary": "Migrating from Azure to GitHub Pages: A Developer‚Äôs JourneyToday I want to share the story of migrating my personal website from Azure Storage Static Websites...",
  "tags": [
    "github-pages",
    "azure",
    "migration",
    "static-sites",
    "ci-cd",
    "automation"
  ],
  "category": "DevOps",
  "readTime": 8,
  "featured": true,
  "published": true,
  "content": "<h1 id=\"migrating-from-azure-to-github-pages-a-developer-s-journey\">Migrating from Azure to GitHub Pages: A Developer‚Äôs Journey</h1><p>Today I want to share the story of migrating my personal website from Azure Storage Static Websites to GitHub Pages. What started as a cost optimization exercise turned into a valuable lesson about choosing the right tools for the job.</p>\n<h2 id=\"the-original-setup\">The Original Setup</h2><p>My website was initially hosted on Azure using a sophisticated setup:</p>\n<ul>\n<li><strong>Infrastructure</strong>: Terraform for Infrastructure as Code</li>\n<li><strong>Hosting</strong>: Azure Storage Account with Static Website hosting</li>\n<li><strong>Deployment</strong>: GitHub Actions + Terraform Cloud</li>\n<li><strong>Content</strong>: Markdown-to-JSON processing for the blog system</li>\n</ul>\n<p>While this setup worked well, it had some complexities:</p>\n<pre><code class=\"language-yaml\"># Original workflow complexity\nAzure CLI ‚Üí Terraform ‚Üí Storage Account ‚Üí File Upload ‚Üí Website</code></pre><h2 id=\"why-migrate-\">Why Migrate?</h2><p>Several factors motivated the migration:</p>\n<h3 id=\"1-strong-simplicity-over-complexity-strong-\">1. <strong>Simplicity Over Complexity</strong></h3><p>The Azure setup required managing:</p>\n<ul>\n<li>Service principals and authentication</li>\n<li>Terraform state management</li>\n<li>Azure Storage configurations</li>\n<li>Multiple deployment steps</li>\n</ul>\n<h3 id=\"2-strong-cost-optimization-strong-\">2. <strong>Cost Optimization</strong></h3><p>GitHub Pages is free for public repositories, while Azure Storage (though minimal) still incurred costs.</p>\n<h3 id=\"3-strong-better-integration-strong-\">3. <strong>Better Integration</strong></h3><p>GitHub Pages integrates seamlessly with GitHub repositories, eliminating the need for external authentication.</p>\n<h3 id=\"4-strong-maintenance-overhead-strong-\">4. <strong>Maintenance Overhead</strong></h3><p>The Terraform configuration required periodic updates and maintenance that didn‚Äôt add value to a simple static site.</p>\n<h2 id=\"the-migration-process\">The Migration Process</h2><h3 id=\"step-1-remove-azure-infrastructure\">Step 1: Remove Azure Infrastructure</h3><pre><code class=\"language-bash\"># Removed all Terraform files\nrm -rf terraform/\nrm scripts/setup-*.sh\nrm TERRAFORM-CLOUD-SETUP.md</code></pre><h3 id=\"step-2-create-github-actions-workflow\">Step 2: Create GitHub Actions Workflow</h3><p>I created a new workflow that combines blog processing and GitHub Pages deployment:</p>\n<pre><code class=\"language-yaml\"># .github/workflows/deploy-github-pages.yml\nname: Deploy to GitHub Pages\n\non:\n  push:\n    branches: [ main ]\n  workflow_dispatch:\n\njobs:\n  build:\n    runs-on: ubuntu-latest\n    steps:\n      - name: Checkout\n        uses: actions/checkout@v4\n        \n      - name: Setup Node.js\n        uses: actions/setup-node@v4\n        with:\n          node-version: '18'\n          \n      - name: Process blog posts\n        run: |\n          npm ci\n          npm run build\n          \n      - name: Upload artifact\n        uses: actions/upload-pages-artifact@v3\n        with:\n          path: ./source\n\n  deploy:\n    needs: build\n    permissions:\n      pages: write\n      id-token: write\n    environment:\n      name: github-pages\n    runs-on: ubuntu-latest\n    steps:\n      - name: Deploy to GitHub Pages\n        uses: actions/deploy-pages@v4</code></pre><h3 id=\"step-3-update-documentation\">Step 3: Update Documentation</h3><p>Updated all documentation to reflect the new GitHub Pages architecture, removing references to Azure and Terraform.</p>\n<h2 id=\"benefits-realized\">Benefits Realized</h2><h3 id=\"-strong-simplified-deployment-strong-\">üöÄ <strong>Simplified Deployment</strong></h3><pre><code class=\"language-yaml\"># New streamlined workflow\nGit Push ‚Üí GitHub Actions ‚Üí Process Content ‚Üí Deploy to Pages</code></pre><h3 id=\"-strong-cost-savings-strong-\">üí∞ <strong>Cost Savings</strong></h3><ul>\n<li><strong>Before</strong>: ~$2-5/month for Azure Storage</li>\n<li><strong>After</strong>: $0 (GitHub Pages is free for public repos)</li>\n</ul>\n<h3 id=\"-strong-reduced-maintenance-strong-\">üîß <strong>Reduced Maintenance</strong></h3><ul>\n<li>No more Terraform state management</li>\n<li>No Azure authentication concerns</li>\n<li>Automatic SSL certificates</li>\n<li>Built-in CDN</li>\n</ul>\n<h3 id=\"-strong-better-developer-experience-strong-\">‚ö° <strong>Better Developer Experience</strong></h3><ul>\n<li>Single platform (GitHub) for code, issues, and hosting</li>\n<li>Automatic deployments on push</li>\n<li>Easy rollbacks through Git history</li>\n<li>Built-in deployment logs</li>\n</ul>\n<h2 id=\"key-learnings\">Key Learnings</h2><h3 id=\"1-strong-right-tool-for-the-job-strong-\">1. <strong>Right Tool for the Job</strong></h3><p>Sometimes the ‚Äúenterprise‚Äù solution isn‚Äôt necessary for simple use cases. GitHub Pages is perfect for static sites.</p>\n<h3 id=\"2-strong-complexity-has-a-cost-strong-\">2. <strong>Complexity Has a Cost</strong></h3><p>Every additional service, authentication method, and deployment step adds maintenance overhead.</p>\n<h3 id=\"3-strong-platform-integration-matters-strong-\">3. <strong>Platform Integration Matters</strong></h3><p>Using GitHub for both code repository and hosting creates a seamless workflow.</p>\n<h3 id=\"4-strong-don-t-over-engineer-strong-\">4. <strong>Don‚Äôt Over-Engineer</strong></h3><p>My blog doesn‚Äôt need the complexity of Infrastructure as Code when a simple GitHub Actions workflow suffices.</p>\n<h2 id=\"the-new-architecture\">The New Architecture</h2><pre><code class=\"language-mermaid\">graph LR\n    A[Write Markdown] --> B[Git Push]\n    B --> C[GitHub Actions]\n    C --> D[Process Content]\n    D --> E[Deploy to Pages]\n    E --> F[Live Website]</code></pre><p><strong>Technology Stack:</strong></p>\n<ul>\n<li><strong>Source</strong>: GitHub Repository</li>\n<li><strong>Processing</strong>: Node.js + GitHub Actions</li>\n<li><strong>Hosting</strong>: GitHub Pages</li>\n<li><strong>Domain</strong>: Custom domain with automatic SSL</li>\n<li><strong>CDN</strong>: GitHub‚Äôs global CDN (included)</li>\n</ul>\n<h2 id=\"performance-comparison\">Performance Comparison</h2><table>\n<thead>\n<tr>\n<th>Metric</th>\n<th>Azure Setup</th>\n<th>GitHub Pages</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>Build Time</td>\n<td>3-5 minutes</td>\n<td>2-3 minutes</td>\n</tr>\n<tr>\n<td>SSL Setup</td>\n<td>Manual</td>\n<td>Automatic</td>\n</tr>\n<tr>\n<td>CDN</td>\n<td>Additional cost</td>\n<td>Included</td>\n</tr>\n<tr>\n<td>Custom Domain</td>\n<td>Manual DNS</td>\n<td>Simple CNAME</td>\n</tr>\n<tr>\n<td>Deployment Complexity</td>\n<td>High</td>\n<td>Low</td>\n</tr>\n</tbody></table>\n<h2 id=\"conclusion\">Conclusion</h2><p>This migration reinforced an important principle: <strong>choose simplicity when it serves your needs</strong>. While Azure Storage with Terraform was a great learning experience, GitHub Pages provides everything I need for a personal website with significantly less complexity.</p>\n<p>The migration took about 2 hours and resulted in:</p>\n<ul>\n<li>‚úÖ Lower costs (free hosting)</li>\n<li>‚úÖ Simplified deployment</li>\n<li>‚úÖ Better integration</li>\n<li>‚úÖ Reduced maintenance</li>\n<li>‚úÖ Same performance and features</li>\n</ul>\n<p>Sometimes the best architecture is the simplest one that meets your requirements.</p>\n<h2 id=\"what-s-next-\">What‚Äôs Next?</h2><p>With the infrastructure simplified, I can focus on what matters most: creating content and improving the user experience. The time saved on infrastructure maintenance can now be invested in writing better blog posts and enhancing the website‚Äôs features.</p>\n<p>Have you ever over-engineered a solution only to realize simpler was better? I‚Äôd love to hear your stories in the comments!</p>\n<hr>\n<p><em>This post was written during the live migration process. The website you‚Äôre reading this on is now proudly hosted on GitHub Pages! \ud83c</em>*</p>\n",
  "seo": {
    "metaDescription": "How I successfully migrated my personal website from Azure Storage Static Websites to GitHub Pages, simplifying deployment and reducing costs.",
    "keywords": [
      "github pages",
      "azure migration",
      "static website hosting",
      "ci/cd",
      "terraform",
      "github actions"
    ]
  }
}